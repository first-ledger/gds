name: CI/CD on tag push, create gds release

on:
  workflow_dispatch:
  push:
    tags:
      - 'gds@*'
    secrets:
      GHA_TOKEN:
        required: true
      NPM_TOKEN:
        required: true

jobs:
  branch-name:
    runs-on: ubuntu-latest
    outputs:
      current_branch: ${{ steps.branch-names.outputs.current_branch }}
      base_ref_branch: ${{ steps.branch-names.outputs.base_ref_branch }}
      ref_branch: ${{ steps.branch-names.outputs.ref_branch }}
      is_tag: ${{ steps.branch-names.outputs.is_tag }}
      tag: ${{ steps.branch-names.outputs.tag }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          repository: first-ledger/gds
          ref: ${{ github.ref_name }}
          token: ${{ secrets.GHA_TOKEN  }}

      - uses: tj-actions/branch-names@v8
        id: branch-names

      - name: Running on a tag branch.
        if: steps.branch-names.outputs.is_tag == 'true'
        run: |
          echo "Running on: ${{ steps.branch-names.outputs.tag }}"

      - name: Get the current tag
        if: steps.branch-names.outputs.is_tag == 'true'
        run: |
          echo "${{ steps.branch-names.outputs.tag }}"

      - name: Get Base Ref branch names
        run: |
          echo "${{ steps.branch-names.outputs.base_ref_branch }}"

  create-release:
    runs-on: ubuntu-latest
    needs: branch-name
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          repository: first-ledger/gds
          ref: ${{ github.ref_name }}
          token: ${{ secrets.GHA_TOKEN  }}

      - name: Setups environment with pnpm
        uses: ./.github/actions/setup
        with:
          node_version: '21.6.1'
          pkg_manager: 'pnpm'
          scope: '@first-ledger'
          env_file: 'skip'

      - name: Install Deps using pnpm
        uses: ./.github/actions/install-deps
        with:
          node_version: '21.6.1'
          pkg_manager: 'pnpm'

      - name: Build package
        run: 'pnpm build'

      - name: Publish Beta to npm
        if: needs.branch-name.outputs.base_ref_branch == 'beta'
        uses: ./.github/actions/npm-publish
        with:
          token: ${{ secrets.NPM_TOKEN }}
          cmd: 'pnpm pub'
          tag: 'beta'
          dry: 'false'
          access: 'public'

      - name: Publish Latest to npm
        if: needs.branch-name.outputs.base_ref_branch == 'prod'
        uses: ./.github/actions/npm-publish
        with:
          token: ${{ secrets.NPM_TOKEN }}
          cmd: 'pnpm pub'
          tag: 'latest'
          dry: 'false'
          access: 'public'

      - name: Get version number
        id: version-number
        run: echo "::set-output name=version::${GITHUB_REF_NAME//gds@}"

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GHA_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref_name }}
          body_path: ./releases/${{ steps.version-number.outputs.version }}.md
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GHA_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./.bundle.zip
          asset_name: first-ledger-gds-${{ steps.version-number.outputs.version }}.zip
          asset_content_type: application/zip
